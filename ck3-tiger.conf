# The ck3-tiger.conf file is in standard Paradox script format.
# It should be placed in the top directory of your mod.

languages = {
	# This will check only english and german localizations
	#check = "english"
	#check = "german"

	# If you DON'T specify any check languages, you can instead say which ones to skip.
	#skip = "french"
	#skip = "spanish"

	# If you don't specify anything in languages, the validator will check all languages.
}

# Allows configuring what reports are printed by CK3-Tiger.
filter = {

    # Whether to report about problems in vanilla game files.
    # Setting this to 'yes' results in a LOT of spam.
    # Optional boolean value, defaults to no.
    show_vanilla = no

    # Whether to report about problems in mods loaded via the load_mod sections.
    # Optional boolean value, defaults to no.
    show_loaded_mods = no

    # Contains rules for reports, using trigger syntax.
    # Only reports matching the trigger will be printed.
    # The root trigger is an AND block, just like any other trigger.
    trigger = {
        # For more information, there is a guide at: ck3-tiger/filter.md

        # In short, valid trigger keys are:
        # - always = yes/no
        # - NOT, AND, OR, NAND, NOR
        # - severity
        # - confidence
        # - key
        # - file
        # - text
        # - ignore_keys_in_files

 		# Only print warnings and errors
		severity >= Warning
		# Don't print reports that are likely false positives
		confidence >= Reasonable

		# Ignore known false positive reports
		NAND = { # Missing Carnalitas trait flags
			key = missing-item
			OR = {
				text = "trait flag carn_cannot_be_enslaved not defined in common/traits/"
				text = "trait flag carn_slave_cannot_be_freed not defined in common/traits/"
			}
			OR = {
				file = common/character_interactions/carnx_enslave_interaction.txt
				file = common/scripted_triggers/carnx_slave_triggers.txt
			}
		}
		NAND = { # Vanilla issue in gifting_leads_towards_friendship_effect
			key = scopes
			text = "`gifting_leads_towards_friendship_effect` expects root to be character but root seems to be none"
			file = common/character_interactions/carnx_gift_slave_interaction.txt
		}
		NAND = { # Vanilla issue in send_child_to_clergy_effect
			key = scopes
			text = "`send_child_to_clergy_effect` expects root to be character but root seems to be none"
			file = common/character_interactions/zzz_00_prison_interactions.txt
		}
		NAND = { # Vanilla issue in release_from_prison_interaction
			key = validation
			text = "expected just `release_from_prison = yes`"
			file = common/character_interactions/zzz_00_prison_interactions.txt
		}
		NAND = { # Missing tooltips in vanilla release_from_prison_interaction
			key = tooltip
			text = "OR is a too complex trigger to be tooltipped in a trigger that shows failures only"
			file = common/character_interactions/zzz_00_prison_interactions.txt
		}
		NAND = { # Missing tooltips in vanilla kick_from_court_validity_trigger
			key = tooltip
			text = "negated AND is a too complex trigger to be tooltipped in a trigger that shows failures only"
			file = common/scripted_triggers/zzz_00_interaction_triggers.txt
		}
		NAND = { # Missing localization for DEBUG_MAIN in vanilla
			key = missing-localization
			text = "missing english, french, russian and simp_chinese localization key DEBUG_MAIN"
			file = common/character_interaction_categories/00_character_interaction_categories.txt
		}
		NAND = { # Missing localization for SCHEME_NOT_AGAINST_SELF in vanilla
			key = missing-localization
			text = "missing english, french, russian and simp_chinese localization key SCHEME_NOT_AGAINST_SELF"
			file = common/scripted_modifiers/zzz_00_hostile_scheme_scripted_modifiers.txt
		}
		NAND = { # Missing localization for carn_had_sex_with_effect.second_person.tt in Carnalitas
			key = missing-localization
			text = "missing french and russian localization key carn_had_sex_with_effect.second_person.tt"
			file = common/scripted_effects/carn_had_sex_with_effect.txt
		}

		# TODO Fix missing tooltips
		NAND = {
			key = tooltip
			text = "OR is a too complex trigger to be tooltipped in a trigger that shows failures only"
			OR = {
				file = common/character_interactions/carnx_free_slave_interaction.txt
				file = common/character_interactions/carnx_liberate_slave_interaction.txt
				file = common/scripted_triggers/carnx_slave_triggers.txt
			}
		}
	}
}

# Use a load_mod section to tell ck3-tiger to load another mod before this one.
# This is useful when making submods or compatibility patch mods.
# You can have multiple load_mod sections.
load_mod = {
	# The label will be used in the error output to mark files from this mod
	label = "carnalitas"
	# The path to the mod's .mod file. Use forward slashes.
	modfile = "../carnalitas/descriptor.mod"
}

#characters = {
#	# Only warn about characters who are born by this date (usually your last bookmark)
#	only_born = "1511.1.1"  # optional
#}

# Sometimes ck3-tiger makes a mistake in determining the scope types expected
# by a scripted trigger or effect. Its conclusions can be overridden here.
# Scope overrides can be ALL (to accept any scope) or a list separated by |,
# like character|province|landed_title
scope_override = {
	artifact_low_rarity_trigger = ALL
	artifact_medium_rarity_trigger = ALL
	artifact_high_rarity_trigger = ALL
	artifact_region_trigger = ALL
}

# Optional block to control output styles and colors. Colors are enabled by default.
# Another way to disable all ANSI characters in the output is to supply the --no-color flag.
# That flag will override anything you define here, in the config file.
output_style = {
    # Default value is 'yes', except with ck3-tiger-auto when it is default 'no'.
    # If set to 'no', no ANSI characters will be added to the output and the output will not be colored.
    # Also, all other settings in this block will be ignored.
#    enable = yes

    # Optional block to set the error color.
#    error = {
#        # Default is red. Supported values are Black, Red, Green, Yellow, Blue, Purple, Cyan, White.
#        color = "red"
#    }
    # Optional block to set the warning color.
#    warning = {
#        # Default is yellow. Supported values are Black, Red, Green, Yellow, Blue, Purple, Cyan, White.
#        color = "yellow"
#    }
    # Optional block to set the info color.
#    info = {
#        # Default is green. Supported values are Black, Red, Green, Yellow, Blue, Purple, Cyan, White.
#        color = "green"
#    }
    # Optional block to set the advice color.
#    untidy = {
#        # Default is cyan. Supported values are Black, Red, Green, Yellow, Blue, Purple, Cyan, White.
#        color = "cyan"
#    }

}
