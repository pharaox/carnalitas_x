namespace = carnx_decision_events

scripted_effect carnx_1010_buy_slave_effect = {
	# Save permanent scopes for carn_buy_slave_effect
	save_scope_as = actor
	save_scope_as = buyer
	$MERCHANT$ = { save_scope_as = seller }
	$SLAVE$ = { save_scope_as = slave }

	carn_buy_slave_effect = {
		SLAVE_PRICE = scope:slave.carnx_slave_ask_price_value
	}

	# Clear permanent scopes
	clear_saved_scope = actor
	clear_saved_scope = buyer
	clear_saved_scope = seller
	clear_saved_scope = slave
}

scripted_trigger carnx_1010_can_buy_slave_trigger = {
	save_temporary_scope_as = actor
	save_temporary_scope_as = buyer
	$MERCHANT$ = { save_temporary_scope_as = seller }
	$SLAVE$ = { save_temporary_scope_as = slave }
	short_term_gold >= scope:slave.carnx_slave_ask_price_value
}

scripted_trigger carnx_1010_ai_will_buy_slave_trigger = {
	save_temporary_scope_as = buyer
	$MERCHANT$ = { save_temporary_scope_as = seller }
	$SLAVE$ = { save_temporary_scope_as = slave }
	scope:seller = {
		is_character_interaction_potentially_accepted = {
			interaction = carn_sell_slave_interaction
			recipient = scope:buyer
			secondary_recipient = scope:slave
		}
	}
}

scripted_trigger carnx_1010_done_with_slave_market_trigger = {
	list_size:bought_from_slave_merchants = list_size:slave_merchants
}

# Visiting Location: the Slave Market
# Needs scopes:
# * visiting_location
# * visiting_partner
# * been_to_slave_merchants - List of visited slave merchants, use for loc
# * bought_from_slave_merchants - List of slave merchants from whom a slave has been bought, use to disable
# Sets scopes:
# * first_slave_merchant, second_slave_merchant, third_slave_merchant - Merchants
# * outraged_partner - Visiting partner if outraged
# * been_to_slave_market - Set to yes (to specify that the event has already been triggered)
# * finished_slave_market - Set to yes if slaves of every type have been bought
# * last_location - Set to flag:slave_market
#
carnx_decision_events.1010 = {
	type = character_event
	title = carnx_decision_events.1010.t
	window = visit_settlement_window

	desc = {
		# Intro
		first_valid = {
			triggered_desc = {
				trigger = {
					NOR = {
						exists = scope:been_to_slave_market
						exists = scope:second_slave_merchant
						exists = scope:third_slave_merchant
					}
				}
				desc = carnx_decision_events.1010.desc_01
			}
			triggered_desc = {
				trigger = {
					NOR = {
						exists = scope:been_to_slave_market
						exists = scope:third_slave_merchant
					}
				}
				desc = carnx_decision_events.1010.desc_02
			}
			triggered_desc = {
				trigger = {
					NOT = { exists = scope:been_to_slave_market }
				}
				desc = carnx_decision_events.1010.desc_03
			}
			random_valid = {
				triggered_desc = {
					trigger = {
						scope:last_location ?= flag:main_square
					}
					desc = carnx_decision_events.1010.desc_returned_01
				}
				triggered_desc = {
					trigger = {
						scope:last_location ?= flag:main_square
					}
					desc = carnx_decision_events.1010.desc_returned_02
				}
			}
			random_valid = {
				triggered_desc = {
					trigger = {
						scope:last_location ?= flag:slave_merchant
					}
					desc = carnx_decision_events.1010.desc_returned_from_slave_merchant_01
				}
				triggered_desc = {
					trigger = {
						scope:last_location ?= flag:slave_merchant
					}
					desc = carnx_decision_events.1010.desc_returned_from_slave_merchant_02
				}
			}
		}
		# Outro
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:outraged_partner
					NOT = { exists = scope:been_to_slave_market }
				}
				desc = carnx_decision_events.1010.desc_outro_outraged_partner
			}
			triggered_desc = {
				trigger = {
					exists = scope:visiting_partner
					NOT = { exists = scope:been_to_slave_market }
				}
				desc = carnx_decision_events.1010.desc_outro_partner
			}
			triggered_desc = {
				trigger = {
					NOT = { exists = scope:been_to_slave_market }
				}
				desc = carnx_decision_events.1010.desc_outro
			}
			triggered_desc = {
				trigger = {
					exists = scope:outraged_partner
					carnx_1010_done_with_slave_market_trigger = yes
				}
				desc = carnx_decision_events.1010.desc_outro_return_outraged_partner_finished
			}
			triggered_desc = {
				trigger = {
					exists = scope:visiting_partner
					carnx_1010_done_with_slave_market_trigger = yes
				}
				desc = carnx_decision_events.1010.desc_outro_return_partner_finished
			}
			triggered_desc = {
				trigger = {
					carnx_1010_done_with_slave_market_trigger = yes
				}
				desc = carnx_decision_events.1010.desc_outro_return_finished
			}
			random_valid = {
				triggered_desc = {
					trigger = {
						exists = scope:outraged_partner
					}
					desc = carnx_decision_events.1010.desc_outro_return_outraged_partner_01
				}
				triggered_desc = {
					trigger = {
						exists = scope:outraged_partner
					}
					desc = carnx_decision_events.1010.desc_outro_return_outraged_partner_02
				}
			}
			random_valid = {
				triggered_desc = {
					trigger = {
						exists = scope:visiting_partner
					}
					desc = carnx_decision_events.1010.desc_outro_return_partner_01
				}
				triggered_desc = {
					trigger = {
						exists = scope:visiting_partner
					}
					desc = carnx_decision_events.1010.desc_outro_return_partner_02
				}
			}
			random_valid = {
				triggered_desc = {
					desc = carnx_decision_events.1010.desc_outro_return_01
				}
				triggered_desc = {
					desc = carnx_decision_events.1010.desc_outro_return_02
				}
			}
		}
	}

	theme = carnx_slave_market

	# Root and their partner
	left_portrait = {
		trigger = { exists = scope:visiting_partner }
		character = scope:visiting_partner
		triggered_animation = {
			trigger = { exists = scope:outraged_partner }
			animation = rage
		}
		triggered_animation = {
			trigger = { carnx_1010_done_with_slave_market_trigger = yes }
			animation = boredom
		}
		animation = survey
	}
	center_portrait = {
		character = root
		triggered_animation = {
			trigger = { has_trait = greedy }
			animation = stress
		}
		animation = personality_callous
	}

	# The merchants, if they are available
	lower_left_portrait = {
		trigger = {
			scope:first_slave_merchant = {
				NOT = { is_in_list = bought_from_slave_merchants }
			}
		}
		character = scope:first_slave_merchant
	}
	lower_center_portrait = {
		trigger = {
			scope:second_slave_merchant ?= {
				NOT = { is_in_list = bought_from_slave_merchants }
			}
		}
		character = scope:second_slave_merchant
	}
	lower_right_portrait = {
		trigger = {
			scope:third_slave_merchant ?= {
				NOT = { is_in_list = bought_from_slave_merchants }
			}
		}
		character = scope:third_slave_merchant
	}

	immediate = {
		# If visiting partner is compassionate or zealous, make them outraged
		if = {
			limit = {
				NOT = { exists = scope:outraged_partner }
				scope:visiting_partner ?= {
					OR = {
						ai_compassion > 0
						AND = {
							carnx_is_slavery_never_accepted_trigger = yes
							ai_zeal > 0
						}
					}
				}
			}
			scope:visiting_partner = {
				save_scope_as = outraged_partner
			}
		}

		# Find merchants
		if = {
			limit = { list_size:slave_merchants = 0 }

			# Get merchants
			save_temporary_scope_value_as = {
				name = num_slave_merchants
				value = scope:visiting_location.carnx_num_merchants_value
			}
			while = {
				limit = { list_size:slave_merchants < scope:num_slave_merchants }
				carnx_get_merchant_effect = {
					TYPE = slave_merchant
					LOCATION = scope:visiting_location
					CHARACTER = root
					BLACKLIST = slave_merchants
					MERCHANT = slave_merchant
				}
				scope:slave_merchant = {
					add_to_list = slave_merchants
				}
				scope:recurring_slave_merchant ?= {
					add_to_list = recurring_slave_merchants
				}
				clear_saved_scope = slave_merchant
				clear_saved_scope = recurring_slave_merchant
			}

			# Save merchant scopes
			ordered_in_list = {
				list = slave_merchants
				position = 0
				save_scope_as = first_slave_merchant
			}
			if = {
				limit = { list_size:slave_merchants > 1 }
				ordered_in_list = {
					list = slave_merchants
					position = 1
					save_scope_as = second_slave_merchant
				}
			}
			if = {
				limit = { list_size:slave_merchants > 2 }
				ordered_in_list = {
					list = slave_merchants
					position = 2
					save_scope_as = third_slave_merchant
				}
			}
		}
	}

	# Visit first slave merchant
	option = {
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							scope:first_slave_merchant = {
								is_in_list = been_to_slave_merchants
							}
						}
						desc = carnx_decision_events.1010.a_second
					}
					desc = carnx_decision_events.1010.a
				}
			}
		}

		trigger = {
			custom_tooltip = {
				text = carnx_decision_events.1010.a.cooldown.tt
				scope:first_slave_merchant = {
					NOT = { is_in_list = bought_from_slave_merchants }
				}
			}
		}
		show_as_unavailable = { always = yes }

		highlight_portrait = scope:first_slave_merchant

		save_scope_value_as = { name = been_to_slave_market value = yes }
		save_scope_value_as = { name = last_location value = flag:slave_market }

		# Go to first_slave_merchant
		scope:first_slave_merchant = { save_scope_as = slave_merchant }
		custom_tooltip = carnx_decision_events.1010.a.tt
		trigger_event = carnx_decision_events.1011

		ai_chance = {
			base = 100
			modifier = {
				scope:first_slave_merchant = {
					is_in_list = been_to_slave_merchants
				}
				factor = 0.5
			}
		}
	}

	# Visit second slave merchant
	option = {
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							scope:second_slave_merchant = {
								is_in_list = been_to_slave_merchants
							}
						}
						desc = carnx_decision_events.1010.b_second
					}
					desc = carnx_decision_events.1010.b
				}
			}
		}

		trigger = {
			exists = scope:second_slave_merchant
			custom_tooltip = {
				text = carnx_decision_events.1010.b.cooldown.tt
				scope:second_slave_merchant = {
					NOT = { is_in_list = bought_from_slave_merchants }
				}
			}
		}
		show_as_unavailable = {
			exists = scope:second_slave_merchant
		}

		highlight_portrait = scope:second_slave_merchant

		save_scope_value_as = { name = been_to_slave_market value = yes }
		save_scope_value_as = { name = last_location value = flag:slave_market }

		# Go to second_slave_merchant
		scope:second_slave_merchant = { save_scope_as = slave_merchant }
		custom_tooltip = carnx_decision_events.1010.b.tt
		trigger_event = carnx_decision_events.1011

		ai_chance = {
			base = 100
			modifier = {
				scope:second_slave_merchant = {
					is_in_list = been_to_slave_merchants
				}
				factor = 0.5
			}
		}
	}

	# Visit third slave merchant
	option = {
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							scope:third_slave_merchant = {
								is_in_list = been_to_slave_merchants
							}
						}
						desc = carnx_decision_events.1010.c_second
					}
					desc = carnx_decision_events.1010.c
				}
			}
		}

		trigger = {
			exists = scope:third_slave_merchant
			custom_tooltip = {
				text = carnx_decision_events.1010.c.cooldown.tt
				scope:third_slave_merchant = {
					NOT = { is_in_list = bought_from_slave_merchants }
				}
			}
		}
		show_as_unavailable = {
			exists = scope:third_slave_merchant
		}

		highlight_portrait = scope:third_slave_merchant

		save_scope_value_as = { name = been_to_slave_market value = yes }
		save_scope_value_as = { name = last_location value = flag:slave_market }

		# Go to third_slave_merchant
		scope:third_slave_merchant = { save_scope_as = slave_merchant }
		custom_tooltip = carnx_decision_events.1010.c.tt
		trigger_event = carnx_decision_events.1011

		ai_chance = {
			base = 100
			modifier = {
				scope:third_slave_merchant = {
					is_in_list = been_to_slave_merchants
				}
				factor = 0.5
			}
		}
	}

	# Refuse to take part
	option = {
		name = carnx_decision_events.1010.d

		trigger = {
			NOT = { has_trait = carnx_slaver }
		}
		show_as_unavailable = { always = yes }

		# Add piety
		if = {
			limit = { carnx_is_slavery_never_accepted_trigger = yes }
			add_piety = miniscule_piety_gain
		}

		# Stress
		stress_impact = {
			compassionate = miniscule_stress_impact_loss
			callous = miniscule_stress_impact_gain
			sadistic = miniscule_stress_impact_gain
		}

		# Opinion with outraged partner
		scope:outraged_partner ?= {
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = 20
			}
		}

		# Update scopes
		save_scope_value_as = { name = finished_slave_market value = yes }
		save_scope_value_as = { name = been_to_slave_market value = yes }
		save_scope_value_as = { name = last_location value = flag:slave_market }

		set_variable = {
			name = carnx_1000_refused_recently
			days = 365
		}

		# Go back to main square
		custom_tooltip = ep3_laamp_decision_event.return.tt
		trigger_event = carnx_decision_events.1000

		ai_chance = {
			base = 0
			ai_value_modifier = {
				ai_compassion = 0.5
			}
			modifier = {
				OR = {
					has_character_modifier = carnx_slavery_attitude_slaver_modifier
					has_character_modifier = carnx_slavery_attitude_trader_modifier
					has_character_modifier = carnx_slavery_attitude_employer_modifier
				}
				add = -50
			}
			modifier = {
				has_character_modifier = carnx_slavery_attitude_liberator_modifier
				add = 50
			}
		}
	}

	# Do something else
	option = {
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = { carnx_1010_done_with_slave_market_trigger = yes }
						desc = carnx_decision_events.1010.e_second
					}
					desc = carnx_decision_events.1010.e
				}
			}
		}

		if = {
			limit = { carnx_1010_done_with_slave_market_trigger = yes }
			save_scope_value_as = { name = finished_slave_market value = yes }
		}
		save_scope_value_as = { name = been_to_slave_market value = yes }
		save_scope_value_as = { name = last_location value = flag:slave_market }

		# Go back to main square
		custom_tooltip = ep3_laamp_decision_event.return.tt
		trigger_event = carnx_decision_events.1000

		ai_chance = {
			base = 50
		}
	}
}

# Visiting Location: the Slave Merchant
# Needs scopes:
# * visiting_location
# * visiting_partner
# * slave_merchant - The slave merchant
# Sets scopes:
# * first_merchant_slave, second_merchant_slave - Slaves for sale
# * outraged_partner - Visiting partner if outraged
# * been_to_slave_merchants - List of visited slave merchants (to specify that the event has already been triggered)
# * bought_from_slave_merchants - List of slave merchants from whom a slave has been bought
# * last_location - Set to flag:slave_merchant
#
carnx_decision_events.1011 = {
	type = character_event
	title = carnx_decision_events.1011.t
	window = visit_settlement_window

	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:slave_merchant = {
						NOT = { is_in_list = been_to_slave_merchants }
						is_in_list = recurring_slave_merchants
					}
				}
				desc = carnx_decision_events.1011.desc_reused_slave_merchant
			}
			triggered_desc = {
				trigger = {
					scope:slave_merchant = {
						NOT = { is_in_list = been_to_slave_merchants }
					}
				}
				desc = carnx_decision_events.1011.desc
			}
			random_valid = {
				triggered_desc = {
					desc = carnx_decision_events.1011.desc_returned_01
				}
				triggered_desc = {
					desc = carnx_decision_events.1011.desc_returned_02
				}
				triggered_desc = {
					desc = carnx_decision_events.1011.desc_returned_03
				}
			}
		}
	}

	theme = carnx_slave_market

	left_portrait = {
		trigger = { exists = scope:first_merchant_slave }
		character = scope:first_merchant_slave
		animation = sadness
	}
	center_portrait = {
		trigger = { exists = scope:second_merchant_slave }
		character = scope:second_merchant_slave
		animation = shame
	}
	right_portrait = {
		character = scope:slave_merchant
		camera = camera_event_scheme_far_right
		animation = personality_callous
	}

	immediate = {
		# Find template character
		carnx_get_template_character_effect = {
			CHARACTER = scope:county_holder
			CHARACTER2 = scope:slave_merchant
			TEMPLATE_CHARACTER = template_character
		}

		# Find slaves for sale
		scope:slave_merchant = {
			# Get slaves
			carnx_get_slaves_effect = {
				LOCATION = scope:visiting_location
				CHARACTER = root
				TEMPLATE_CHARACTER = scope:template_character
			}

			# Save slave scopes
			ordered_in_list = {
				list = slaves
				order_by = carnx_slave_base_price_value
				save_scope_as = first_merchant_slave
			}
			ordered_in_list = {
				list = slaves
				limit = {
					NOT = { this = scope:first_merchant_slave }
				}
				order_by = carnx_slave_base_price_value
				save_scope_as = second_merchant_slave
			}
		}

		scope:first_merchant_slave ?= {
			carnx_undress_effect = yes
		}
		scope:second_merchant_slave ?= {
			carnx_undress_effect = yes
		}

		# Remember the slave merchant as quartermaster
		vls_remember_merchant_character_effect = {
			TYPE = quartermaster
			CHARACTER = scope:slave_merchant
		}
	}

	# Buy first slave
	option = {
		name = carnx_decision_events.1011.a

		trigger = {
			carnx_1010_can_buy_slave_trigger = {
				MERCHANT = scope:slave_merchant
				SLAVE = scope:first_merchant_slave
			}
		}
		show_as_unavailable = { always = yes }

		# Actually buy the slave
		carnx_1010_buy_slave_effect = {
			MERCHANT = scope:slave_merchant
			SLAVE = scope:first_merchant_slave
		}

		# Opinion with outraged partner
		scope:outraged_partner ?= {
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -20
			}
		}

		# Update scopes
		scope:slave_merchant = {
			add_to_list = bought_from_slave_merchants
			add_to_list = been_to_slave_merchants
		}
		save_scope_value_as = { name = last_location value = flag:slave_merchant }

		# Go back to slave market
		custom_tooltip = carnx_decision_events.1011.return.tt
		trigger_event = carnx_decision_events.1010

		ai_chance = {
			base = 0
			modifier = {
				carnx_1010_ai_will_buy_slave_trigger = {
					MERCHANT = scope:slave_merchant
					SLAVE = scope:first_merchant_slave
				}
				add = 100
			}
		}
	}

	# Buy second slave
	option = {
		name = carnx_decision_events.1011.b

		trigger = {
			carnx_1010_can_buy_slave_trigger = {
				MERCHANT = scope:slave_merchant
				SLAVE = scope:second_merchant_slave
			}
		}
		show_as_unavailable = { always = yes }

		# Actually buy the slave
		carnx_1010_buy_slave_effect = {
			MERCHANT = scope:slave_merchant
			SLAVE = scope:second_merchant_slave
		}

		# Opinion with outraged partner
		scope:outraged_partner ?= {
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -20
			}
		}

		# Update scopes
		scope:slave_merchant = {
			add_to_list = bought_from_slave_merchants
			add_to_list = been_to_slave_merchants
		}
		save_scope_value_as = { name = last_location value = flag:slave_merchant }

		# Go back to slave market
		custom_tooltip = carnx_decision_events.1011.return.tt
		trigger_event = carnx_decision_events.1010

		ai_chance = {
			base = 0
			modifier = {
				carnx_1010_ai_will_buy_slave_trigger = {
					MERCHANT = scope:slave_merchant
					SLAVE = scope:second_merchant_slave
				}
				add = 100
			}
		}
	}

	# Do something else
	option = {
		name = carnx_decision_events.1011.c

		# Update scopes
		scope:slave_merchant = {
			add_to_list = been_to_slave_merchants
		}
		save_scope_value_as = { name = last_location value = flag:slave_merchant }

		# Go back to slave market
		custom_tooltip = carnx_decision_events.1011.return.tt
		trigger_event = carnx_decision_events.1010

		ai_chance = {
			base = 1
		}
	}

	after = {
		scope:first_merchant_slave = {
			carnx_dress_effect = yes
		}
		scope:second_merchant_slave = {
			carnx_dress_effect = yes
		}
	}
}
