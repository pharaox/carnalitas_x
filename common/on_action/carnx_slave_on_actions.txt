carn_on_slave_enslaved = {
	effect = {
		create_character_memory = {
			type = carnx_enslaved_memory
			participants = {
				enslaver = scope:new_owner
			}
		}
		carnx_debug_log_effect = { MSG = carnx_debug_msg_slave_enslaved }
	}
}

carn_on_slave_freed = {
	effect = {
		create_character_memory = {
			type = carnx_freed_memory
			participants = {
				emancipator = scope:former_owner
			}
		}
		carnx_debug_log_effect = { MSG = carnx_debug_msg_slave_freed }
	}
}

carnx_on_slave_bought = {
	effect = {
		create_character_memory = {
			type = carnx_bought_memory
			participants = {
				buyer = scope:buyer
			}
		}
		carnx_debug_log_effect = { MSG = carnx_debug_msg_slave_bought }
	}
}

carnx_on_slave_seized = {
	effect = {
		create_character_memory = {
			type = carnx_seized_memory
			participants = {
				seizer = scope:new_owner
			}
		}
		carnx_debug_log_effect = { MSG = carnx_debug_msg_slave_seized }
	}
}

carnx_on_slave_ransomed = {
	effect = {
		create_character_memory = {
			type = carnx_ransomed_memory
			participants = {
				ransomer = scope:payer
			}
		}
		carnx_debug_log_effect = { MSG = carnx_debug_msg_slave_ransomed }
	}
}

carnx_on_slave_gifted = {
	effect = {
		create_character_memory = {
			type = carnx_gifted_memory
			participants = {
				new_owner = scope:new_owner
			}
		}
		carnx_debug_log_effect = { MSG = carnx_debug_msg_slave_gifted }
	}
}

carnx_on_slave_escaped = {
	effect = {
		create_character_memory = {
			type = carnx_escaped_memory
			participants = {
				former_owner = scope:former_owner
			}
		}
		carnx_debug_log_effect = { MSG = carnx_debug_msg_slave_escaped }
	}
}

carnx_on_slave_liberated = {
	effect = {
		create_character_memory = {
			type = carnx_liberated_memory
			participants = {
				liberator = scope:liberator
			}
		}
		carnx_debug_log_effect = { MSG = carnx_debug_msg_slave_liberated }
	}
}

# Fires when a character leaves a court. Not fired when leaving due to death or similar
# Will still fire even if on_join_court is firing (fires just before it)
# Root is the character
# scope:old_employer is their old employer
on_leave_court = {
	on_actions = { carnx_on_leave_court }
}

carnx_on_leave_court = {
	effect = {
		if = {
			limit = { has_trait = slave }
			every_relation = {
				type = slave_owner
				save_scope_as = owner
			}
			if = {
				limit = {
					exists = scope:owner
					scope:owner = {
						is_ruler = yes
						carnx_can_be_slave_owner_trigger = yes
					}
				}
				if = {
					limit = {
						NOT = { is_courtier_of = scope:owner }
					}
					carnx_debug_log_effect = { MSG = carnx_debug_msg_moving_slave }
					save_temporary_scope_as = slave
					scope:owner = {
						carnx_add_courtier_effect = { SLAVE = scope:slave }
					}
				}
			}
			else = {
				carnx_debug_log_effect = { MSG = carnx_debug_msg_freeing_slave }
				carn_free_slave_effect = yes
			}
		}
	}
}

# A title is inherited by a character
# root = the new holder
# scope:title = the title that changes hands
# scope:previous_holder = previous holder. Should be dead
on_title_gain_inheritance = {
	on_actions = { carnx_on_title_gain_inheritance }
}

carnx_on_title_gain_inheritance = {
	effect = {
		if = {
			limit = {
				is_ruler = yes
				carnx_can_be_slave_owner_trigger = yes
			}
			every_relation = {
				type = slave
				limit = {
					NOT = { is_courtier_of = root }
				}
				save_temporary_scope_as = slave
				root = {
					carnx_add_courtier_effect = { SLAVE = scope:slave }
				}
			}
		}
		else = {
			every_relation = {
				type = slave
				carnx_debug_log_effect = { MSG = carnx_debug_msg_freeing_slave }
				carn_free_slave_effect = yes
			}
		}
	}
}

# A title is lost by a character
# root = the old holder
# scope:title = the title that changes hands
# scope:new_holder = new holder.
on_title_lost = {
	on_actions = { carnx_on_title_lost }
}

carnx_on_title_lost = {
	effect = {
		# If a character becomes unlanded the new holder seizes their slaves
		if = {
			limit = {
				is_landed = no
				carnx_is_slave_owner_trigger = yes
			}
			every_relation = {
				type = slave
				if = {
					limit = {
						exists = scope:new_holder
						scope:new_holder = {
							carnx_can_be_slave_owner_trigger = yes
						}
					}
					scope:new_holder = { save_scope_as = new_owner }
					save_scope_as = slave
					carnx_debug_log_effect = { MSG = carnx_debug_msg_seizing_slave }
					carnx_seize_slave_effect = yes
				}
				else = {
					carnx_debug_log_effect = { MSG = carnx_debug_msg_freeing_slave }
					carn_free_slave_effect = yes
				}
			}
		}
	}
}

# Code on-action: character being imprisoned in root scope
# imprisoning character set as scope:imprisoner
on_imprison = {
	on_actions = { carnx_on_imprison }
}

carnx_on_imprison = {
	effect = {
		if = {
			limit = {
				NOT = { has_trait = slave }
			}
			carnx_debug_log_effect = { MSG = carnx_debug_msg_non_slave_imprisoned }
		}
	}
}

# Code on-action: character released from prison in root scope. Does not fire when "released" due to dying
# imprisoning character set as scope:imprisoner
on_release_from_prison = {
	on_actions = { carnx_on_release_from_prison }
}

carnx_on_release_from_prison = {
	effect = {
		if = {
			limit = {
				NOT = { has_trait = slave }
			}
			carnx_debug_log_effect = { MSG = carnx_debug_msg_non_slave_released_from_prison }
		}
	}
}

# Code on-action: character changes faith. Not called when a character gets a faith on birth, creation, and similar
# Root is the character
# scope:old_faith is the faith they used to have
on_character_faith_change = {
	on_actions = { carnx_on_character_faith_change }
}

carnx_on_character_faith_change = {
	effect = {
		if = {
			limit = {
				has_trait = slave
				any_relation = {
					type = slave_owner
					save_temporary_scope_as = owner
				}
				exists = scope:owner
				faith = scope:owner.faith
			}
			carnx_debug_log_effect = { MSG = carnx_debug_msg_slave_converted }
		}
	}
}

on_set_relation_rival = {
	on_actions = { carnx_on_set_relation_rival }
}

carnx_on_set_relation_rival = {
	effect = {
		if = {
			limit = {
				exists = scope:target
				carnx_was_enslaved_by_character_trigger = { CHARACTER = scope:target }
			}
			carnx_debug_log_effect = { MSG = carnx_debug_msg_character_became_enslavers_rival }
		}
	}
}
