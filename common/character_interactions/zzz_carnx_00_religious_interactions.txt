# Ask a courtier to convert to the liege's faith. Overridden from vanilla.
ask_for_conversion_courtier_interaction = {
	category = interaction_category_religion
	icon = religious

	special_interaction = request_conversion_interaction
	ai_maybe = yes
	can_send_despite_rejection = yes

	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	ai_accept = {
		base = 0
		# Increase base chance
		modifier = {
			add = 50
			desc = EDUCATE_CHILD_ACTOR_IS_MY_LIEGE
		}
		religion_demand_conversion_default_modifier = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
			NOT = { scope:recipient = { has_character_flag = ai_will_not_convert } }
		}
	}

	ai_min_reply_days = 1
	ai_max_reply_days = 5

	on_accept = {
		demand_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {
					type = event_religious_good
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				# trigger_event = char_interaction.0180
				trigger_event = false_conversion.0900
				save_scope_value_as = {
					name = forcibly_converted
					value = yes
				}
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				# trigger_event = char_interaction.0180
				trigger_event = false_conversion.0900
				save_scope_value_as = {
					name = forcibly_converted
					value = yes
				}
			}
		}

		# If we're a clan this interaction affects unity
		accept_faith_conversion_add_clan_unity_effect = yes

		# If character is converting to the state faith, we add influence
		state_faith_conversion_add_piety_effect = yes

		scope:actor = {
			if = {
				limit = {
					any_character_struggle = {
						involvement = involved
						has_struggle_phase_parameter = piety_from_converting_involved_rulers
						is_secondary_character_involvement_involved_trigger = {
							CHAR = scope:recipient
						}
					}
				}
				add_piety = medium_piety_gain
			}
		}
	}

	on_decline = {
		#Negative opinions
		scope:recipient = {
			if = {
				limit = {
					scope:actor = {
						refusing_conversion_is_crime_trigger = {
							CHARACTER = scope:recipient
						}
					}
					scope:recipient = {
						target_is_liege_or_above = scope:actor
					}
				}
				reverse_add_opinion = {
					target = scope:actor
					modifier = illegal_resisted_conversion_opinion
					years = 10
				}
			}
			else = {
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
			}
		}
		scope:actor = {
			send_interface_toast = {
				type = event_toast_effect_bad
				title = ask_for_conversion_decline_notification
				left_icon = scope:recipient
			}
		}

		# If we're a clan this interaction affects unity
		refuse_faith_conversion_add_clan_unity_effect = yes

		state_faith_refuse_conversion_add_piety_effect = yes
	}

	cost = {
		influence = {
			value = 0
			if = {
				limit = { scope:influence_send_option = yes }
				add = scope:actor.medium_influence_value
				desc = INFLUENCE_INTERACTION_ACCEPTANCE_SEND_OPTION
			}
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_option = { # EP3 Influence
		is_shown = { # Actor must have a government that uses influence 
			scope:actor = {
				government_has_flag = government_has_influence
			}
		}
		is_valid = {
			# Actor has enough influence
			scope:actor = { influence >= medium_influence_value }
			# Both characters are within the same top realm
			custom_tooltip = {
				text = not_same_realm_tt
				scope:recipient.top_liege = scope:actor.top_liege
			}
		}
		flag = influence_send_option
		localization = TRADE_INFLUENCE_FOR_BETTER_AI_ACCEPTANCE
	}
	send_options_exclusive = no


	ai_potential = {
		is_adult = yes
	}

	ai_will_do = {
		base = 100

		# CSR: More reluctant to convert slaves since they may have to be freed afterwards
		modifier = {
			scope:actor = {
				has_relation_slave = scope:recipient
			}
			add = -90
		}

		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}

		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				#faith.religion = religion:judaism_religion #CSR Commented out for better compatibility
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Rulers with State Faith won't try to convert people with faiths that are astray or better
			factor = 0
			scope:actor = {
				government_allows = state_faith
				primary_title.state_faith ?= {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
		}
	}
}
