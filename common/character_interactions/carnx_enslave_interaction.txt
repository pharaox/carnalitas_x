# Enslave one of your prisoners.
# Scopes: actor is the new owner (imprisoner), recipient is the slave.
# Overridden from Carnalitas.
carn_enslave_interaction = {
	category = interaction_category_prison
	desc = carn_enslave_interaction_desc
	interface_priority = 100
	common_interaction = yes
	icon = carnx_chain

	send_name = carn_enslave_interaction

	ai_min_reply_days = 0
	ai_max_reply_days = 0

	is_shown = {
		NOT = { has_game_rule = carn_slavery_content_disabled }
		scope:actor = {
			carnx_can_be_slave_owner_trigger = yes
			NOT = { has_relation_slave = scope:recipient }
		}
		scope:recipient = {
			is_imprisoned_by = scope:actor
			NOR = {
				carnx_is_slave_trigger = yes
				has_character_flag = carn_cannot_be_enslaved
				has_trait_with_flag = carn_cannot_be_enslaved
			}
		}
		# Performance: AI should not attempt unlikely interactions
		trigger_if = {
			limit = {
				scope:actor = { is_ai = yes }
			}
			scope:actor = {
				NOT = { carnx_is_slavery_crime_trigger = { CHARACTER = scope:recipient } }
			}
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			carnx_can_start_interaction_trigger = yes
		}
		scope:recipient = {
			NOT = { has_strong_hook = scope:actor }
			custom_description = {
				text = "currently_being_tortured"
				NOT = { has_character_flag = is_being_tortured }
			}
		}
	}

	auto_accept = yes

	on_accept = {
		if = {
			limit = {
				scope:actor = { is_ai = yes }
				scope:recipient = { is_ai = no }
			}
			scope:recipient = { trigger_event = carn_slave.0001 } # Give players a chance to see what's about to happen
		}
		else = {
			carn_enslave_effect = {
				SLAVE = scope:recipient
				OWNER = scope:actor
				DRAMA = yes
			}
		}
	}

	ai_targets = {
		ai_recipients = prisoners
	}

	ai_frequency = 12

	ai_potential = {
		is_at_war = no
		# Performance: AI should not consider unlikely interactions
		NOR = {
			carnx_is_slavery_always_crime_trigger = yes
			carnx_is_slavery_always_forbidden_trigger = { ACTION = flag:enslave }
		}
	}

	ai_will_do = {
		base = 0
		modifier = {
			add = carnx_enslave_ai_will_do_base
		}

		# Opinion of prisoner (-25 to 25 depending on opinion)
		opinion_modifier = {
			trigger = {
				NOT = { scope:actor = scope:recipient }
			}
			opinion_target = scope:recipient
			multiplier = -0.25
		}

		# Compassion (-25 to 25 depending on compassion)
		ai_value_modifier = {
			ai_compassion = -0.25
		}

		# Greed (0 to 50 depending on greed)
		modifier = {
			add = {
				value = ai_greed
				multiply = 0.01
				add = 1
				multiply = 25
			}
		}

		# Marked for enslavement (50)
		modifier = {
			scope:recipient = {
				has_character_modifier = carnx_marked_for_enslavement_modifier
			}
			add = 50
		}

		# Slavery crime or shunned by faith
		modifier = {
			carnx_is_slavery_crime_trigger = { CHARACTER = scope:recipient }
			add = carnx_ai_negative_crime_impact_value
		}
		modifier = {
			carnx_is_slavery_shunned_trigger = { CHARACTER = scope:recipient }
			add = carnx_ai_negative_shunned_impact_value
		}

		# Additional slavery impact (laws, culture, etc.)
		carnx_slavery_modifier = {
			SLAVE = scope:recipient
			ACTION = flag:enslave
		}

		# Slavery attitude
		# Slavers, traders, and employers more likely to enslave, liberators less likely
		modifier = {
			OR = {
				has_character_modifier = carnx_slavery_attitude_slaver_modifier
				has_character_modifier = carnx_slavery_attitude_trader_modifier
				has_character_modifier = carnx_slavery_attitude_employer_modifier
			}
			add = carnx_ai_positive_attitude_impact_value
		}
		modifier = {
			OR = {
				has_character_modifier = carnx_slavery_attitude_liberator_modifier
			}
			add = carnx_ai_negative_attitude_impact_value
		}

		# Family and relations (-50 to -200 depending on how close the relation)
		# Reluctant to enslave family and relations
		carnx_family_and_relations_modifier = {
			RULER = scope:actor
			SLAVE = scope:recipient
			SCALE = -50
		}

		# Lacking councillors, court positions, knights, or commanders (PIV for each skill, aptitude, or trait above cutoff)
		carnx_lacking_councillors_modifier = {
			RULER = scope:actor
			SLAVE = scope:recipient
			SCALE = carnx_ai_positive_skill_impact_halved_value
		}
		carnx_lacking_court_positions_modifier = {
			RULER = scope:actor
			SLAVE = scope:recipient
			SCALE = carnx_ai_positive_aptitude_impact_halved_value
		}
		carnx_lacking_knights_modifier = {
			RULER = scope:actor
			SLAVE = scope:recipient
			SCALE = carnx_ai_positive_prowess_impact_halved_value
		}
		carnx_lacking_commanders_modifier = {
			RULER = scope:actor
			SLAVE = scope:recipient
			SCALE = carnx_ai_positive_cs_impact_halved_value
		}

		# Claims (PIV if useful claims on neighbouring realms)
		carnx_claims_modifier = {
			RULER = scope:actor
			SLAVE = scope:recipient
			SCALE = carnx_ai_positive_claims_impact_halved_value
		}

		# Attraction (0 to PIV depending on attraction, doubled for lustful, halved for chaste)
		carnx_attraction_modifier = {
			RULER = scope:actor
			SLAVE = scope:recipient
			SCALE = carnx_ai_positive_attraction_impact_halved_value
		}

		# Female (PIV if a visibly fertile female)
		carnx_female_modifier = {
			SLAVE = scope:recipient
			SCALE = carnx_ai_positive_female_impact_halved_value
		}

		# Age (up to NIV depending on age)
		carnx_age_modifier = {
			SLAVE = scope:recipient
			SCALE = carnx_ai_negative_age_impact_halved_value
		}

		# Execute reason, rival, cheating spouse (75) or nemesis (150)
		carnx_execute_reason_modifier = {
			RULER = scope:actor
			SLAVE = scope:recipient
			SCALE = 75
		}

		# Don't enslave if execute reason and recipient imprisoned for less than 2 years
		# Prefer executing instead of enslaving if AI is up to it
		modifier = {
			carnx_has_execute_reason_trigger = { CHARACTER = scope:recipient }
			scope:recipient = {
				time_in_prison = { years < 2 }
			}
			factor = 0
		}
	}
}