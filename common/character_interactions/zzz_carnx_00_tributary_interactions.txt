# Offer Courtier
offer_courtier_interaction = {
	category = interaction_category_diplomacy
	common_interaction = no
	icon = courtier_interaction
	interface_priority = 40

	desc = offer_courtier_interaction_desc

	ai_targets = {
		ai_recipients = suzerain
		ai_recipients = liege
		ai_recipients = scripted_relations
		max = 5
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 36

	greeting = positive
	notification_text = OFFER_COURTIER_NOTIFICATION

	needs_recipient_to_open = yes

	populate_actor_list = {
		scope:actor = {
			every_courtier = {
				limit = {
					is_available_healthy_ai_adult = yes
					NOR = {
						is_consort_of = scope:actor
						is_heir_of = scope:actor
						AND = {
							is_female = yes
							patrilinear_marriage = yes
						}
						AND = {
							is_male = yes
							matrilinear_marriage = yes
						}
						is_diarch = yes
						is_designated_diarch = yes
						has_character_flag = has_been_offered_as_concubine
						# CSR Don't offer slaves
						carnx_is_slave_trigger = yes
					}
				}
				add_to_list = characters
			}
		}
	}

	is_shown = {
		scope:actor != scope:recipient
		scope:recipient = {
			is_ruler = yes
			NOT = { government_has_flag = government_is_herder }
		}
	}

	is_valid_showing_failures_only = {
		custom_tooltip = {
			text = offer_courtier_valid_courtier_tt
			scope:actor = {
				any_courtier = {
					is_available_healthy_ai_adult = yes
					NOR = {
						is_consort_of = scope:actor
						is_heir_of = scope:actor
						AND = {
							is_female = yes
							patrilinear_marriage = yes
						}
						AND = {
							is_male = yes
							matrilinear_marriage = yes
						}
						#Unop Match conditions in populate_actor_list
						is_diarch = yes
						is_designated_diarch = yes
						has_character_flag = has_been_offered_as_concubine
						# CSR Don't offer slaves
						carnx_is_slave_trigger = yes
					}
				}
			}
		}
	}

	can_be_picked = {
		is_adult = yes
	}

	can_send = {
		custom_tooltip = {
			text = no_heirs_can_be_sent_tt
			scope:secondary_actor = {
				NOT = {
					is_heir_of = scope:actor
				}
			}
		}
		custom_tooltip = {
			text = no_spouses_can_be_sent_tt
			scope:secondary_actor = {
				NOT = {
					is_consort_of = scope:actor
				}
			}
		}
	}

	auto_accept = no

	ai_accept = {
		base = -10
		
		modifier = {
			add = 100
			scope:secondary_actor = {
				OR = {
					sum_of_all_skills_value >= sum_of_all_skills_threshold_good
					martial >= monumentally_high_skill_rating
					prowess >= extremely_high_skill_rating
					AND = {
						diplomacy >= monumentally_high_skill_rating
						scope:actor.cp:councillor_chancellor ?= { diplomacy < monumentally_high_skill_rating }
					}
					AND = {
						diplomacy >= monumentally_high_skill_rating
						scope:actor.cp:councillor_steward ?= { stewardship < monumentally_high_skill_rating }
					}
					AND = {
						diplomacy >= monumentally_high_skill_rating
						scope:actor.cp:councillor_spymaster ?= { intrigue < monumentally_high_skill_rating }
					}
					has_relation_lover = scope:recipient # Shhh, don't tell anyone, of course you're 'skilled'!
					trigger_if = {
						limit = {
							scope:recipient = {
								government_has_flag = government_is_nomadic
							}
						}
						OR = {
							AND = {
								sum_of_all_skills_value >= sum_of_all_skills_threshold_average
								scope:recipient = {
									any_courtier = {
										count < 10
									}
								}
							}
							aptitude:master_of_hunt_court_position >= 4
							aptitude:keeper_of_the_horses_court_position >= 4
							aptitude:boyan_court_position >= 4
							aptitude:siege_engineer_court_position >= 4
							aptitude:yurtchi_court_position >= 4
							aptitude:cherbi_court_position >= 4
							aptitude:yeke_jarquchi_court_position >= 4
							aptitude:foreign_emissary_court_position >= 4
						}
					}
				}
			}
			desc = AI_INTERESTING_COURTIER_REASON
		}
		
		modifier = {
			add = 100
			scope:secondary_actor.prowess >= decent_skill_rating
			scope:recipient.number_of_knights < scope:recipient.max_number_of_knights
			desc = AI_KNIGHT_REASON
		}
		
		modifier = {
			add = 100
			exists = scope:secondary_actor.inspiration
			desc = AI_INSPIRED_REASON
		}
		
		modifier = {
			add = 100
			scope:secondary_actor = {
				is_close_or_extended_family_of = scope:recipient
			}
			desc = AI_FAMILY_REASON
		}
		
		modifier = {
			add = 100
			scope:secondary_actor = {
				is_consort_of = scope:recipient
			}
			desc = AI_SPOUSE_REASON
		}
		
		modifier = {
			add = 100
			scope:secondary_actor = {
				has_relation_friend = scope:recipient
			}
			desc = AI_FRIEND_REASON
		}
		
		modifier = {
			add = -200
			scope:secondary_actor = {
				has_relation_rival = scope:recipient
			}
			desc = AI_RIVAL_REASON
		}
		
		modifier = {
			add = 100
			scope:recipient = {
				any_courtier = {
					is_consort_of = scope:secondary_actor
				}
			}
			desc = AI_SPOUSE_OF_COURTIER_REASON
		}
		
		modifier = {
			add = 100
			scope:recipient = {
				any_courtier = {
					count < 5
				}
			}
			desc = AI_LACK_COURTIERS_REASON
		}
	}

	ai_potential = {
		OR = {
			ai_greed <= 25
			is_obedient = yes
		}
		OR = {
			is_tributary = yes
			num_of_relation_friend > 0
			num_of_relation_lover > 0
		}
	}

	ai_will_do = {
		base = 0
		
		modifier = {
			add = 100
			scope:recipient = {
				OR = {
					has_relation_friend = scope:actor
					has_relation_lover = scope:actor
				}
			}
		}
		
		modifier = {
			add = 100
			scope:recipient = {
				is_tributary_of = scope:actor
				OR = {
					ai_greed <= -50
					is_obedient_to = scope:actor
					opinion = {
						target = scope:actor
						value >= 50
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:secondary_actor = {
				OR = {
					has_relation_friend = scope:actor
					has_relation_lover = scope:actor
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:actor = {
				NOR = {
					government_has_flag = government_is_nomadic
					government_has_flag = government_is_herder
				}
			}
			scope:secondary_actor = {
				is_close_or_extended_family_of = scope:actor
			}
		}
		
		modifier = { # The AI only offers really good characters
			factor = 0
			scope:secondary_actor = {
				NOR = {
					sum_of_all_skills_value >= sum_of_all_skills_threshold_good
					martial >= monumentally_high_skill_rating
					prowess >= extremely_high_skill_rating
					exists = inspiration
					AND = {
						diplomacy >= monumentally_high_skill_rating
						scope:actor.cp:councillor_chancellor ?= { diplomacy < monumentally_high_skill_rating }
					}
					AND = {
						diplomacy >= monumentally_high_skill_rating
						scope:actor.cp:councillor_steward ?= { stewardship < monumentally_high_skill_rating }
					}
					AND = {
						diplomacy >= monumentally_high_skill_rating
						scope:actor.cp:councillor_spymaster ?= { intrigue < monumentally_high_skill_rating }
					}
					trigger_if = {
						limit = {
							scope:recipient = {
								government_has_flag = government_is_nomadic
							}
						}
						OR = {
							AND = {
								sum_of_all_skills_value >= sum_of_all_skills_threshold_average
								scope:recipient = {
									any_courtier = {
										count < 10
									}
								}
							}
							aptitude:master_of_hunt_court_position >= 4
							aptitude:keeper_of_the_horses_court_position >= 4
							aptitude:boyan_court_position >= 4
							aptitude:siege_engineer_court_position >= 4
							aptitude:yurtchi_court_position >= 4
							aptitude:cherbi_court_position >= 4
							aptitude:yeke_jarquchi_court_position >= 4
							aptitude:foreign_emissary_court_position >= 4
						}
					}
				}
			}
		}
	}

	on_send = {
		scope:secondary_actor = { # to block the same character from being offered twice
			add_character_flag = {
				flag = has_been_offered_as_concubine
				days = 5
			}
		}
	}
	
	on_accept = {
		#Unop Warning for multiple courtier offers
		if = {
			limit = {
				scope:recipient = {
					has_opinion_modifier = {
						target = scope:actor
						modifier = unop_offer_courtier_opinion
					}
				}
			}
			custom_tooltip = ALREADY_OFFERED_COURTIER_WARNING
		}

		scope:secondary_actor = {
			add_opinion = {
				#Unop Make consistent with demand_courtier interaction
				target = scope:actor
				modifier = annoyed_opinion
				opinion = -10
			}
		}
		scope:actor = {
			#Unop Add a proper notification
			send_interface_toast = {
				type = event_toast_effect_neutral
				title = unop_msg_offer_courtier_accepted_tt
				right_icon = scope:recipient
				left_icon = scope:secondary_actor
				scope:recipient = {
					add_courtier = scope:secondary_actor
					scope:secondary_actor = {
						every_consort = {
							limit = {
								is_courtier_of = scope:actor
							}
							scope:recipient = {
								add_courtier = prev
							}
						}
						every_child = {
							limit = {
								is_adult = no
								is_courtier_of = scope:recipient
							}
							scope:actor = {
								add_courtier = prev
							}
						}
					}
					add_opinion = {
						target = scope:actor
						modifier = unop_offer_courtier_opinion #Unop Use custom non-stacking opinion, as for other gifts
						opinion = 10
					}
				}
			}
		}
	}

	on_decline = {
		scope:actor = {
			send_interface_toast = {
				type = event_toast_effect_bad
				title = msg_courtier_offer_rejected_title
				right_icon = scope:recipient
				left_icon = scope:secondary_actor
				custom_tooltip = msg_courtier_offer_rejected
			}
		}
	}
}

# Demand Courtier
demand_courtier_interaction = {
	category = interaction_category_vassal
	common_interaction = yes
	icon = request_courtier_interaction
	interface_priority = 45

	desc = demand_courtier_interaction_desc

	ai_targets = {
		ai_recipients = tributaries
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	cooldown_against_recipient = { years = 3 }

	greeting = positive
	notification_text = DEMAND_COURTIER_NOTIFICATION
	
	highlighted_reason = HIGHLIGHTED_SKILLED_COURTIER
	is_highlighted = {
		scope:recipient = {
			any_courtier = {
				is_available_healthy_ai_adult = yes
				NOR = {
					is_consort_of = scope:recipient
					is_heir_of = scope:recipient
					AND = {
						is_female = yes
						patrilinear_marriage = yes
					}
					AND = {
						is_male = yes
						matrilinear_marriage = yes
					}
					is_diarch = yes
					is_designated_diarch = yes
					has_character_flag = has_been_offered_as_concubine
					# CSR Don't offer slaves
					carnx_is_slave_trigger = yes
				}
				OR = {
					sum_of_all_skills_value >= sum_of_all_skills_threshold_good
					martial >= monumentally_high_skill_rating
					prowess >= extremely_high_skill_rating
					AND = {
						diplomacy >= monumentally_high_skill_rating
						scope:actor.cp:councillor_chancellor ?= { diplomacy < monumentally_high_skill_rating }
					}
					AND = {
						diplomacy >= monumentally_high_skill_rating
						scope:actor.cp:councillor_steward ?= { stewardship < monumentally_high_skill_rating }
					}
					AND = {
						diplomacy >= monumentally_high_skill_rating
						scope:actor.cp:councillor_spymaster ?= { intrigue < monumentally_high_skill_rating }
					}
					trigger_if = {
						limit = {
							scope:actor = {
								government_has_flag = government_is_nomadic
							}
						}
						OR = {
							aptitude:master_of_hunt_court_position >= 4
							aptitude:keeper_of_the_horses_court_position >= 4
							aptitude:boyan_court_position >= 4
							aptitude:siege_engineer_court_position >= 4
							aptitude:yurtchi_court_position >= 4
							aptitude:cherbi_court_position >= 4
							aptitude:yeke_jarquchi_court_position >= 4
							aptitude:foreign_emissary_court_position >= 4
						}
					}
				}
			}
		}
	}

	needs_recipient_to_open = yes

	populate_actor_list = {
		scope:recipient = {
			every_courtier = {
				limit = {
					is_available_healthy_ai_adult = yes
					NOR = {
						is_consort_of = scope:recipient
						is_heir_of = scope:recipient
						AND = {
							is_female = yes
							patrilinear_marriage = yes
						}
						AND = {
							is_male = yes
							matrilinear_marriage = yes
						}
						is_diarch = yes
						is_designated_diarch = yes
						has_character_flag = has_been_offered_as_concubine
						# CSR Don't offer slaves
						carnx_is_slave_trigger = yes
					}
				}
				add_to_list = characters
			}
		}
	}

	is_shown = {
		scope:actor != scope:recipient
		scope:recipient = {
			OR = {
				trigger_if = {
					limit = {
						scope:actor = {
							government_has_flag = government_is_nomadic
						}
					}
					is_vassal_of = scope:actor
				}
				is_tributary_of = scope:actor
			}
		}
	}

	is_valid_showing_failures_only = {
		custom_tooltip = {
			text = demand_courtier_valid_courtier_tt
			scope:recipient = {
				any_courtier = {
					is_available_healthy_ai_adult = yes
					NOR = {
						is_consort_of = scope:recipient
						is_heir_of = scope:recipient
						AND = {
							is_female = yes
							patrilinear_marriage = yes
						}
						AND = {
							is_male = yes
							matrilinear_marriage = yes
						}
						#Unop Match conditions in populate_actor_list
						is_diarch = yes
						is_designated_diarch = yes
						has_character_flag = has_been_offered_as_concubine
						# CSR Don't offer slaves
						carnx_is_slave_trigger = yes
					}
				}
			}
		}
	}

	can_be_picked = {
		is_adult = yes
	}

	can_send = {
	}

	auto_accept = no

	ai_accept = {
		base = 0
		
		modifier = {
			add = 1000
			scope:recipient = {
				is_obedient_to = scope:actor
			}
			desc = AI_OBEDIENT_REASON
		}
		
		modifier = {
			add = 25
			scope:recipient = {
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
		
		modifier = {
			add = 50
			scope:recipient = {
				has_dread_level_towards = {
					target = scope:actor
					level = 2
				}
			}
			desc = COWED_REASON
		}
		
		opinion_modifier = { # Opinion Factor
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 1.0
			desc = AI_OPINION_REASON
		}
		
		modifier = {
			add = -25
			scope:secondary_actor = {
				OR = {
					is_councillor = yes
					has_any_court_position = yes
				}
			}
			desc = AI_EMPLOYED_COURTIER_REASON
		}
		
		modifier = {
			add = -15
			scope:secondary_actor = {
				is_knight = yes
			}
			desc = AI_IS_KNIGHT_REASON
		}
		
		modifier = {
			add = -50
			exists = scope:secondary_actor.inspiration
			desc = AI_INSPIRED_REASON
		}
		
		modifier = {
			add = -25
			scope:secondary_actor = {
				is_close_or_extended_family_of = scope:recipient
			}
			desc = AI_FAMILY_REASON
		}
		
		modifier = {
			add = -50
			scope:secondary_actor = {
				has_relation_friend = scope:recipient
			}
			desc = AI_FRIEND_REASON
		}
		
		modifier = {
			add = 1000
			scope:secondary_actor = {
				has_relation_rival = scope:recipient
			}
			desc = AI_RIVAL_REASON
		}
	}

	ai_potential = {
		ai_greed >= 0
		any_tributary = { }
	}

	ai_will_do = {
		base = 0
		
		modifier = {
			add = 100
			scope:secondary_actor = {
				OR = {
					has_relation_friend = scope:actor
					has_relation_lover = scope:actor
					sum_of_all_skills_value >= sum_of_all_skills_threshold_good
					martial >= monumentally_high_skill_rating
					prowess >= extremely_high_skill_rating
					exists = inspiration
					AND = {
						diplomacy >= monumentally_high_skill_rating
						scope:actor.cp:councillor_chancellor ?= { diplomacy < monumentally_high_skill_rating }
					}
					AND = {
						diplomacy >= monumentally_high_skill_rating
						scope:actor.cp:councillor_steward ?= { stewardship < monumentally_high_skill_rating }
					}
					AND = {
						diplomacy >= monumentally_high_skill_rating
						scope:actor.cp:councillor_spymaster ?= { intrigue < monumentally_high_skill_rating }
					}
					trigger_if = {
						limit = {
							scope:actor = {
								government_has_flag = government_is_nomadic
							}
						}
						OR = {
							AND = {
								sum_of_all_skills_value >= sum_of_all_skills_threshold_average
								scope:actor = {
									any_courtier = {
										count < 10
									}
								}
							}
							aptitude:master_of_hunt_court_position >= 4
							aptitude:keeper_of_the_horses_court_position >= 4
							aptitude:boyan_court_position >= 4
							aptitude:siege_engineer_court_position >= 4
							aptitude:yurtchi_court_position >= 4
							aptitude:cherbi_court_position >= 4
							aptitude:yeke_jarquchi_court_position >= 4
							aptitude:foreign_emissary_court_position >= 4
						}
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient = {
				OR = {
					has_relation_friend = scope:actor
					has_relation_lover = scope:actor
				}
			}
		}
	}

	on_send = {
		scope:secondary_actor = { # to block the same character from being offered twice
			add_character_flag = {
				flag = has_been_offered_as_concubine
				days = 5
			}
		}
	}
	
	on_accept = {
		scope:secondary_actor = {
			add_opinion = {
				target = scope:recipient
				modifier = annoyed_opinion
				opinion = -10
			}
		}
		scope:actor = {
			#Unop Add a proper notification
			send_interface_toast = {
				type = event_toast_effect_neutral
				title = unop_msg_demand_courtier_accepted_tt
				right_icon = scope:recipient
				left_icon = scope:secondary_actor
				add_courtier = scope:secondary_actor
				scope:secondary_actor = {
					every_consort = {
						limit = {
							is_courtier_of = scope:recipient
						}
						scope:actor = {
							add_courtier = prev
						}
					}
					every_child = {
						limit = {
							is_adult = no
							is_courtier_of = scope:recipient
						}
						scope:actor = {
							add_courtier = prev
						}
					}
				}
				add_opinion = {
					target = scope:recipient
					modifier = pleased_opinion
					opinion = 20
				}
			}
		}
		scope:recipient = {
			add_opinion = {
				target = scope:actor
				modifier = upset_opinion
				opinion = -15
			}
		}
	}

	on_decline = {
		scope:actor = {
			send_interface_toast = {
				type = event_toast_effect_bad
				title = msg_courtier_demand_rejected_title
				right_icon = scope:recipient
				left_icon = scope:secondary_actor
				custom_tooltip = msg_courtier_demand_rejected
			}
		}
		scope:actor = {
			add_opinion = {
				target = scope:recipient
				modifier = upset_opinion
				opinion = -15
			}
		}
	}
}
